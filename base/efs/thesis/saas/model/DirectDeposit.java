package efs.thesis.saas.model;

// Generated Mar 13, 2013 12:38:40 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import efs.thesis.common.annotation.AutoCrud;
import efs.thesis.common.annotation.FormElement;
import efs.thesis.common.db.model.PlainModel;
import efs.thesis.common.enumtype.FormType;

/**
 * DirectDeposit generated by hbm2java
 */

@AutoCrud
@Entity
@Table(name = "DIRECT_DEPOSIT")
public class DirectDeposit extends PlainModel implements java.io.Serializable {

	private Integer id;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private Salary salary;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String accountNumber;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String routingNumber;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private Long amount;
	private Set<AccountType> accountTypes = new HashSet<AccountType>(0);

	public DirectDeposit() {
	}

	public DirectDeposit(Salary salary) {
		this.salary = salary;
	}

	public DirectDeposit(Salary salary, String accountNumber,
			String routingNumber, Long amount, Set<AccountType> accountTypes) {
		this.salary = salary;
		this.accountNumber = accountNumber;
		this.routingNumber = routingNumber;
		this.amount = amount;
		this.accountTypes = accountTypes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SALARY_ID")
	public Salary getSalary() {
		return this.salary;
	}

	public void setSalary(Salary salary) {
		this.salary = salary;
	}

	@Column(name = "ACCOUNT_NUMBER", length = 45)
	public String getAccountNumber() {
		return this.accountNumber;
	}

	public void setAccountNumber(String accountNumber) {
		this.accountNumber = accountNumber;
	}

	@Column(name = "ROUTING_NUMBER", length = 45)
	public String getRoutingNumber() {
		return this.routingNumber;
	}

	public void setRoutingNumber(String routingNumber) {
		this.routingNumber = routingNumber;
	}

	@Column(name = "AMOUNT", precision = 10, scale = 0)
	public Long getAmount() {
		return this.amount;
	}

	public void setAmount(Long amount) {
		this.amount = amount;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "directDeposit")
	public Set<AccountType> getAccountTypes() {
		return this.accountTypes;
	}

	public void setAccountTypes(Set<AccountType> accountTypes) {
		this.accountTypes = accountTypes;
	}

	@Override
	public String toString() {
		return getAccountNumber();
	}

}
