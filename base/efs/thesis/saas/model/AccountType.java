package efs.thesis.saas.model;

// Generated Mar 13, 2013 12:38:40 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import efs.thesis.common.annotation.AutoCrud;
import efs.thesis.common.annotation.FormElement;
import efs.thesis.common.db.model.PlainModel;
import efs.thesis.common.enumtype.FormType;

/**
 * AccountType generated by hbm2java
 */

@AutoCrud
@Entity
@Table(name = "ACCOUNT_TYPE")
public class AccountType extends PlainModel implements java.io.Serializable {

	private Integer id;
	private DirectDeposit directDeposit;
	
	@FormElement(type = FormType.TEXT)
	private String name;
	
	@FormElement(type = FormType.TEXT)
	private String code;

	public AccountType() {
	}

	public AccountType(DirectDeposit directDeposit) {
		this.directDeposit = directDeposit;
	}

	public AccountType(DirectDeposit directDeposit, String name, String code) {
		this.directDeposit = directDeposit;
		this.name = name;
		this.code = code;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DIRECT_DEPOSIT_ID")
	public DirectDeposit getDirectDeposit() {
		return this.directDeposit;
	}

	public void setDirectDeposit(DirectDeposit directDeposit) {
		this.directDeposit = directDeposit;
	}

	@Column(name = "NAME", length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "CODE", length = 45)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Override
	public String toString() {
		return getName();
	}

}
