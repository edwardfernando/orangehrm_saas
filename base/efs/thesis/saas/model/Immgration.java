package efs.thesis.saas.model;

// Generated Mar 13, 2013 12:38:40 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import efs.thesis.common.annotation.AutoCrud;
import efs.thesis.common.annotation.FormElement;
import efs.thesis.common.db.model.PlainModel;
import efs.thesis.common.enumtype.FormType;

/**
 * Immgration generated by hbm2java
 */

@AutoCrud
@Entity
@Table(name = "IMMGRATION")
@NamedQuery(name = "findImmigrationsByEmployee", query = "from Immgration i where i.employee = ?")
public class Immgration extends PlainModel implements java.io.Serializable {

	private Integer id;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private ImmgirationType immgirationType;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private Country country;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String number;
	
	@FormElement(type = FormType.DATE, listed = true)
	private Date issuedDate;
	
	@FormElement(type = FormType.DATE, listed = true)
	private Date expiryDate;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String eligibilityStatus;
	
	@FormElement(type = FormType.DATE, listed = true)
	private Date eligibilityReviewDate;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String comments;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private Employee employee;

	public Immgration() {
	}

	public Immgration(ImmgirationType immgirationType, Country country) {
		this.immgirationType = immgirationType;
		this.country = country;
	}

	public Immgration(ImmgirationType immgirationType, Country country,
			String number, Date issuedDate, Date expiryDate,
			String eligibilityStatus, Date eligibilityReviewDate,
			String comments) {
		this.immgirationType = immgirationType;
		this.country = country;
		this.number = number;
		this.issuedDate = issuedDate;
		this.expiryDate = expiryDate;
		this.eligibilityStatus = eligibilityStatus;
		this.eligibilityReviewDate = eligibilityReviewDate;
		this.comments = comments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IMMGIRATION_TYPE_ID")
	public ImmgirationType getImmgirationType() {
		return this.immgirationType;
	}

	public void setImmgirationType(ImmgirationType immgirationType) {
		this.immgirationType = immgirationType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COUNTRY_ID")
	public Country getCountry() {
		return this.country;
	}

	public void setCountry(Country country) {
		this.country = country;
	}

	@Column(name = "NUMBER", length = 45)
	public String getNumber() {
		return this.number;
	}

	public void setNumber(String number) {
		this.number = number;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ISSUED_DATE", length = 10)
	public Date getIssuedDate() {
		return this.issuedDate;
	}

	public void setIssuedDate(Date issuedDate) {
		this.issuedDate = issuedDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "EXPIRY_DATE", length = 10)
	public Date getExpiryDate() {
		return this.expiryDate;
	}

	public void setExpiryDate(Date expiryDate) {
		this.expiryDate = expiryDate;
	}

	@Column(name = "ELIGIBILITY_STATUS", length = 45)
	public String getEligibilityStatus() {
		return this.eligibilityStatus;
	}

	public void setEligibilityStatus(String eligibilityStatus) {
		this.eligibilityStatus = eligibilityStatus;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ELIGIBILITY_REVIEW_DATE", length = 10)
	public Date getEligibilityReviewDate() {
		return this.eligibilityReviewDate;
	}

	public void setEligibilityReviewDate(Date eligibilityReviewDate) {
		this.eligibilityReviewDate = eligibilityReviewDate;
	}

	@Column(name = "COMMENTS")
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPLOYEE_ID")
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}
	
	@Override
	public String toString() {
		return getId().toString();
	}

}
