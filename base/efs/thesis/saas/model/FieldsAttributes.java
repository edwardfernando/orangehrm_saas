package efs.thesis.saas.model;

// Generated Mar 13, 2013 12:38:40 PM by Hibernate Tools 3.2.1.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import efs.thesis.common.annotation.AutoCrud;
import efs.thesis.common.annotation.FormElement;
import efs.thesis.common.db.model.Model;
import efs.thesis.common.enumtype.FormType;

/**
 * FieldsAttributes generated by hbm2java
 */

@AutoCrud
@Entity
@Table(name = "FIELDS_ATTRIBUTES")
public class FieldsAttributes extends Model implements java.io.Serializable {

	private FieldsAttributesId id;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private Fields fields;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private HtmlAttributesMapping htmlAttributesMapping;
	
	@FormElement(type = FormType.TEXTAREA, listed = true)
	private String values;

	public FieldsAttributes() {
	}

	public FieldsAttributes(FieldsAttributesId id, Fields fields,
			HtmlAttributesMapping htmlAttributesMapping) {
		this.id = id;
		this.fields = fields;
		this.htmlAttributesMapping = htmlAttributesMapping;
	}

	public FieldsAttributes(FieldsAttributesId id, Fields fields,
			HtmlAttributesMapping htmlAttributesMapping, String values) {
		this.id = id;
		this.fields = fields;
		this.htmlAttributesMapping = htmlAttributesMapping;
		this.values = values;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "attributesMappingId", column = @Column(name = "ATTRIBUTES_MAPPING_ID", nullable = false)),
			@AttributeOverride(name = "fieldsId", column = @Column(name = "FIELDS_ID", nullable = false)) })
	public FieldsAttributesId getId() {
		return this.id;
	}

	public void setId(FieldsAttributesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FIELDS_ID", nullable = false, insertable = false, updatable = false)
	public Fields getFields() {
		return this.fields;
	}

	public void setFields(Fields fields) {
		this.fields = fields;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ATTRIBUTES_MAPPING_ID", nullable = false, insertable = false, updatable = false)
	public HtmlAttributesMapping getHtmlAttributesMapping() {
		return this.htmlAttributesMapping;
	}

	public void setHtmlAttributesMapping(
			HtmlAttributesMapping htmlAttributesMapping) {
		this.htmlAttributesMapping = htmlAttributesMapping;
	}

	@Column(name = "VALUES", length = 65535)
	public String getValues() {
		return this.values;
	}

	public void setValues(String values) {
		this.values = values;
	}

	@Override
	public String toString() {
		return getValues();
	}

}
