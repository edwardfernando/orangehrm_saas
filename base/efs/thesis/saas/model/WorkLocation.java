package efs.thesis.saas.model;

// Generated Mar 13, 2013 12:38:40 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import efs.thesis.common.annotation.AutoCrud;
import efs.thesis.common.annotation.FormElement;
import efs.thesis.common.db.model.PlainModel;
import efs.thesis.common.enumtype.FormType;

/**
 * WorkLocation generated by hbm2java
 */

@AutoCrud
@Entity
@Table(name = "WORK_LOCATION")
public class WorkLocation extends PlainModel implements java.io.Serializable {

	private Integer id;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private Country country;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String stateProvince;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String city;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String address;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String zipPostalCode;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String phone;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String fax;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String note;
	private Set<Job> jobs = new HashSet<Job>(0);

	public WorkLocation() {
	}

	public WorkLocation(Country country) {
		this.country = country;
	}

	public WorkLocation(Country country, String stateProvince, String city,
			String address, String zipPostalCode, String phone, String fax,
			String note, Set<Job> jobs) {
		this.country = country;
		this.stateProvince = stateProvince;
		this.city = city;
		this.address = address;
		this.zipPostalCode = zipPostalCode;
		this.phone = phone;
		this.fax = fax;
		this.note = note;
		this.jobs = jobs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COUNTRY_ID")
	public Country getCountry() {
		return this.country;
	}

	public void setCountry(Country country) {
		this.country = country;
	}

	@Column(name = "STATE_PROVINCE", length = 45)
	public String getStateProvince() {
		return this.stateProvince;
	}

	public void setStateProvince(String stateProvince) {
		this.stateProvince = stateProvince;
	}

	@Column(name = "CITY", length = 45)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "ADDRESS")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "ZIP_POSTAL_CODE", length = 45)
	public String getZipPostalCode() {
		return this.zipPostalCode;
	}

	public void setZipPostalCode(String zipPostalCode) {
		this.zipPostalCode = zipPostalCode;
	}

	@Column(name = "PHONE", length = 45)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "FAX", length = 45)
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@Column(name = "NOTE", length = 65535)
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "workLocation")
	public Set<Job> getJobs() {
		return this.jobs;
	}

	public void setJobs(Set<Job> jobs) {
		this.jobs = jobs;
	}

	@Override
	public String toString() {
		return getAddress();
	}

}
