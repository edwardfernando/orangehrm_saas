package efs.thesis.saas.model;

// Generated Mar 13, 2013 12:38:40 PM by Hibernate Tools 3.2.1.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import efs.thesis.common.annotation.AutoCrud;
import efs.thesis.common.annotation.FormElement;
import efs.thesis.common.db.model.Model;
import efs.thesis.common.enumtype.FormType;

/**
 * FieldsJsScript generated by hbm2java
 */

@AutoCrud
@Entity
@Table(name = "FIELDS_JS_SCRIPT")
public class FieldsJsScript extends Model implements java.io.Serializable {

	private FieldsJsScriptId id;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private Fields fields;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private JsEvent jsEvent;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private Js js;

	public FieldsJsScript() {
	}

	public FieldsJsScript(FieldsJsScriptId id, Fields fields, JsEvent jsEvent,
			Js js) {
		this.id = id;
		this.fields = fields;
		this.jsEvent = jsEvent;
		this.js = js;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "fieldsId", column = @Column(name = "FIELDS_ID", nullable = false)),
			@AttributeOverride(name = "jsId", column = @Column(name = "JS_ID", nullable = false)) })
	public FieldsJsScriptId getId() {
		return this.id;
	}

	public void setId(FieldsJsScriptId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FIELDS_ID", nullable = false, insertable = false, updatable = false)
	public Fields getFields() {
		return this.fields;
	}

	public void setFields(Fields fields) {
		this.fields = fields;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "JS_EVENT_ID", nullable = false)
	public JsEvent getJsEvent() {
		return this.jsEvent;
	}

	public void setJsEvent(JsEvent jsEvent) {
		this.jsEvent = jsEvent;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "JS_ID", nullable = false, insertable = false, updatable = false)
	public Js getJs() {
		return this.js;
	}

	public void setJs(Js js) {
		this.js = js;
	}

	@Override
	public String toString() {
		return "";
	}

}
