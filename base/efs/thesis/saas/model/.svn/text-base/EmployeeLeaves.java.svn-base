package efs.thesis.saas.model;

// Generated Mar 13, 2013 12:38:40 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import efs.thesis.common.annotation.AutoCrud;
import efs.thesis.common.annotation.FormElement;
import efs.thesis.common.db.model.Model;
import efs.thesis.common.enumtype.FormType;

/**
 * EmployeeLeaves generated by hbm2java
 */

@AutoCrud
@Entity
@Table(name = "EMPLOYEE_LEAVES")
public class EmployeeLeaves extends Model implements java.io.Serializable {

	private Integer id;
	
	@FormElement(type = FormType.POPUP, filterable = true, listed = true)
	private LeaveTypes leaveTypes;
	
	@FormElement(type = FormType.POPUP, filterable = true, listed = true)
	private Employee employee;
	
	@FormElement(type = FormType.TEXT, filterable = true, listed = true)
	private Integer leaveAllocation;
	
	private Set<EmployeeLeaveHistory> employeeLeaveHistories = new HashSet<EmployeeLeaveHistory>();
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LEAVE_TYPES_ID")
	public LeaveTypes getLeaveTypes() {
		return leaveTypes;
	}

	public void setLeaveTypes(LeaveTypes leaveTypes) {
		this.leaveTypes = leaveTypes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPLOYEE_ID")
	public Employee getEmployee() {
		return employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "employeeLeaves")
	public Set<EmployeeLeaveHistory> getEmployeeLeaveHistories() {
		return employeeLeaveHistories;
	}

	public void setEmployeeLeaveHistories(
			Set<EmployeeLeaveHistory> employeeLeaveHistories) {
		this.employeeLeaveHistories = employeeLeaveHistories;
	}

	@Column(name = "LEAVE_ALLOCATION")
	public Integer getLeaveAllocation() {
		return leaveAllocation;
	}

	public void setLeaveAllocation(Integer leaveAllocation) {
		this.leaveAllocation = leaveAllocation;
	}

	@Override
	public String toString() {
		return "";
	}

}
