package efs.thesis.saas.model;

// Generated Mar 13, 2013 12:38:40 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import efs.thesis.common.annotation.AutoCrud;
import efs.thesis.common.annotation.FormElement;
import efs.thesis.common.db.model.PlainModel;
import efs.thesis.common.enumtype.FormType;

/**
 * EmployeeLeaveHistory generated by hbm2java
 */

@AutoCrud
@Entity
@Table(name = "EMPLOYEE_LEAVE_HISTORY")
public class EmployeeLeaveHistory extends PlainModel implements java.io.Serializable {

	private Integer id;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private EmployeeLeaves employeeLeaves;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private LeavePeriod leavePeriod;
	
	@FormElement(type = FormType.DATE, listed = true)
	private Date fromDate;
	
	@FormElement(type = FormType.DATE, listed = true)
	private Date toDate;
	
	@FormElement(type = FormType.CHECKBOX, listed = true)
	private Integer leaveTaken;
	
	@FormElement(type = FormType.CHECKBOX, listed = true)
	private Boolean isScheduled;
//	private Set<Approval> approvals = new HashSet<Approval>(0);

	private Set<LeaveApprovalHistory> leaveApprovalHistories = new HashSet<LeaveApprovalHistory>();
	
	public EmployeeLeaveHistory() {
	}

	public EmployeeLeaveHistory(EmployeeLeaves employeeLeaves,
			LeavePeriod leavePeriod) {
		this.employeeLeaves = employeeLeaves;
		this.leavePeriod = leavePeriod;
	}

	public EmployeeLeaveHistory(EmployeeLeaves employeeLeaves,
			LeavePeriod leavePeriod, Date fromDate, Integer leaveTaken,
			Boolean isScheduled) {
		this.employeeLeaves = employeeLeaves;
		this.leavePeriod = leavePeriod;
		this.fromDate = fromDate;
		this.leaveTaken = leaveTaken;
		this.isScheduled = isScheduled;
//		this.approvals = approvals;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPLOYEE_LEAVES_ID")
	public EmployeeLeaves getEmployeeLeaves() {
		return this.employeeLeaves;
	}

	public void setEmployeeLeaves(EmployeeLeaves employeeLeaves) {
		this.employeeLeaves = employeeLeaves;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LEAVE_PERIOD_ID")
	public LeavePeriod getLeavePeriod() {
		return this.leavePeriod;
	}

	public void setLeavePeriod(LeavePeriod leavePeriod) {
		this.leavePeriod = leavePeriod;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FROM_DATE", length = 10)
	public Date getFromDate() {
		return this.fromDate;
	}

	public void setFromDate(Date fromDate) {
		this.fromDate = fromDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "TO_DATE", length = 10)
	public Date getToDate() {
		return toDate;
	}

	public void setToDate(Date toDate) {
		this.toDate = toDate;
	}

	@Column(name = "LEAVE_TAKEN")
	public Integer getLeaveTaken() {
		return this.leaveTaken;
	}

	public void setLeaveTaken(Integer leaveTaken) {
		this.leaveTaken = leaveTaken;
	}

	@Column(name = "IS_SCHEDULED")
	public Boolean getIsScheduled() {
		return this.isScheduled;
	}

	public void setIsScheduled(Boolean isScheduled) {
		this.isScheduled = isScheduled;
	}

//	@ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
//	@JoinTable(name = "leave_approval_history", joinColumns = { @JoinColumn(name = "EMPLOYEE_LEAVE_HISTORY_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "APPROVAL_ID", nullable = false, updatable = false) })
//	public Set<Approval> getApprovals() {
//		return this.approvals;
//	}
//
//	public void setApprovals(Set<Approval> approvals) {
//		this.approvals = approvals;
//	}
	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "employeeLeaveHistory")
	public Set<LeaveApprovalHistory> getLeaveApprovalHistories() {
		return leaveApprovalHistories;
	}

	public void setLeaveApprovalHistories(
			Set<LeaveApprovalHistory> leaveApprovalHistories) {
		this.leaveApprovalHistories = leaveApprovalHistories;
	}
	
	@Override
	public String toString() {
		return id.toString();
	}
}
