package efs.thesis.saas.model;

// Generated Mar 13, 2013 12:38:40 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import efs.thesis.common.annotation.AutoCrud;
import efs.thesis.common.annotation.FormElement;
import efs.thesis.common.db.model.PlainModel;
import efs.thesis.common.enumtype.FormType;

/**
 * Dependents generated by hbm2java
 */

@AutoCrud
@Entity
@Table(name = "DEPENDENTS")
@NamedQuery(name = "findDependentsByEmployee", query = "from Dependents d where d.employee = ?")
public class Dependents extends PlainModel implements java.io.Serializable {

	private Integer id;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private Employee employee;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private DependentsType dependentsType;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String firstName;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String middleName;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String lastName;
	
	@FormElement(type = FormType.DATE, listed = true)
	private Date dateOfBirth;

	public Dependents() {
	}

	public Dependents(Employee employee, DependentsType dependentsType) {
		this.employee = employee;
		this.dependentsType = dependentsType;
	}

	public Dependents(Employee employee, DependentsType dependentsType,
			String firstName, String middleName, String lastName,
			Date dateOfBirth) {
		this.employee = employee;
		this.dependentsType = dependentsType;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.dateOfBirth = dateOfBirth;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPLOYEE_ID")
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DEPENDENTS_TYPE_ID")
	public DependentsType getDependentsType() {
		return this.dependentsType;
	}

	public void setDependentsType(DependentsType dependentsType) {
		this.dependentsType = dependentsType;
	}

	@Column(name = "FIRST_NAME", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "MIDDLE_NAME", length = 45)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "LAST_NAME", length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "DATE_OF_BIRTH", length = 45)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Override
	public String toString() {
		return new StringBuffer(getFirstName()).append(" ").append(getMiddleName()).append(" ").append(getLastName()).toString();
	}

}
