package efs.thesis.saas.model;

// Generated Mar 13, 2013 12:38:40 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import efs.thesis.common.annotation.AutoCrud;
import efs.thesis.common.annotation.FormElement;
import efs.thesis.common.db.model.PlainModel;
import efs.thesis.common.enumtype.FormType;

/**
 * ContactDetails generated by hbm2java
 */

@AutoCrud
@Entity
@Table(name = "CONTACT_DETAILS")
@NamedQuery(name = "findContactDetailsByEmployee", query = "from ContactDetails cd where cd.employee = ?")
public class ContactDetails extends PlainModel implements java.io.Serializable {

	private Integer id;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private Employee employee;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private Country country;
	
	@FormElement(type = FormType.POPUP, listed = true)
	private ContactDetailsType contactDetailsType;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String addressStreet1;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String addressStreet2;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String city;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String stateProvince;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String homeTelephone;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String mobile;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String workTelephone;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String workEmail;
	
	@FormElement(type = FormType.TEXT, listed = true)
	private String otherEmail;

	public ContactDetails() {
	}

	public ContactDetails(Employee employee, Country country,
			ContactDetailsType contactDetailsType) {
		this.employee = employee;
		this.country = country;
		this.contactDetailsType = contactDetailsType;
	}

	public ContactDetails(Employee employee, Country country,
			ContactDetailsType contactDetailsType, String addressStreet1,
			String addressStreet2, String city, String stateProvince,
			String homeTelephone, String mobile, String workTelephone,
			String workEmail, String otherEmail) {
		this.employee = employee;
		this.country = country;
		this.contactDetailsType = contactDetailsType;
		this.addressStreet1 = addressStreet1;
		this.addressStreet2 = addressStreet2;
		this.city = city;
		this.stateProvince = stateProvince;
		this.homeTelephone = homeTelephone;
		this.mobile = mobile;
		this.workTelephone = workTelephone;
		this.workEmail = workEmail;
		this.otherEmail = otherEmail;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPLOYEE_ID")
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COUNTRY_ID")
	public Country getCountry() {
		return this.country;
	}

	public void setCountry(Country country) {
		this.country = country;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CONTACT_DETAILS_TYPE_ID")
	public ContactDetailsType getContactDetailsType() {
		return this.contactDetailsType;
	}

	public void setContactDetailsType(ContactDetailsType contactDetailsType) {
		this.contactDetailsType = contactDetailsType;
	}

	@Column(name = "ADDRESS_STREET_1", length = 45)
	public String getAddressStreet1() {
		return this.addressStreet1;
	}

	public void setAddressStreet1(String addressStreet1) {
		this.addressStreet1 = addressStreet1;
	}

	@Column(name = "ADDRESS_STREET_2", length = 45)
	public String getAddressStreet2() {
		return this.addressStreet2;
	}

	public void setAddressStreet2(String addressStreet2) {
		this.addressStreet2 = addressStreet2;
	}

	@Column(name = "CITY", length = 45)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "STATE_PROVINCE", length = 45)
	public String getStateProvince() {
		return this.stateProvince;
	}

	public void setStateProvince(String stateProvince) {
		this.stateProvince = stateProvince;
	}

	@Column(name = "HOME_TELEPHONE", length = 45)
	public String getHomeTelephone() {
		return this.homeTelephone;
	}

	public void setHomeTelephone(String homeTelephone) {
		this.homeTelephone = homeTelephone;
	}

	@Column(name = "MOBILE", length = 45)
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Column(name = "WORK_TELEPHONE", length = 45)
	public String getWorkTelephone() {
		return this.workTelephone;
	}

	public void setWorkTelephone(String workTelephone) {
		this.workTelephone = workTelephone;
	}

	@Column(name = "WORK_EMAIL", length = 45)
	public String getWorkEmail() {
		return this.workEmail;
	}

	public void setWorkEmail(String workEmail) {
		this.workEmail = workEmail;
	}

	@Column(name = "OTHER_EMAIL", length = 45)
	public String getOtherEmail() {
		return this.otherEmail;
	}

	public void setOtherEmail(String otherEmail) {
		this.otherEmail = otherEmail;
	}

	@Override
	public String toString() {
		return getId().toString();
	}

}
